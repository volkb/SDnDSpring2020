version: '3.0'

services:
  alumni:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - ./data:/var/www/app #following the host:VM machine pattern this allows us to decouple the data directory from the app dir itself. Following proper microservice architecture
    environment:
      TZ: "America/New York"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5 #build changed to 5 for release stability managment 
    ports:
      - "8081:80"
    environment:
      MYSQL_USERNAME: ${USERNAME?USERNAME variable not set}
      MYSQL_USER_PASSWORD: ${PASSWORD?PASSWORD variable not set}
    depends_on:
      - db

  db: #eliminating the legacy use of the 'links above'
    image: mariadb:10.1
    volumes:
        # - ./alumni.sql:/docker-entrypoint-initdb.d/init.sql:ro
        - ./database/:/var/lib/mysql
    ports:
      - "3307:3306"
    environment:
        TZ: "America/New York"
        MYSQL_USER: ${USERNAME?USERNAME variable not set}
        MYSQL_PASSWORD: ${PASSWORD?PASSWORD variable not set}
        MYSQL_ROOT_PASSWORD: ${ROOTPASSWORD?ROOTPASSWORD variable not set}
        
# For windows, you MUST go to the docker hub rashboard > settings > resources > shared files
# and check BOTH the C drive and the drive containing the project folder.         

#for security reasons, users and passwords have been switched to use cred. injection
#simply set the USERNAME, PASSWORD, and ROOTPASSWORD variables in your environment and run docker-compose as normal
#USERNAME=[username] PASSWORD=[password] docker-compose up 
#ROOTPASSWORD only needs to be set once as the /database state is then generated